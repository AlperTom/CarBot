name: Navigation E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'tests/e2e/**'
      - 'app/globals.css'
      - 'tailwind.config.js'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'tests/e2e/**'
      - 'app/globals.css'
      - 'tailwind.config.js'
  workflow_dispatch:

jobs:
  navigation-tests:
    name: Navigation Tests (${{ matrix.project }})
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        include:
          - project: chromium
            viewport: '1280x720'
          - project: firefox  
            viewport: '1280x720'
          - project: webkit
            viewport: '1280x720'
    
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.project }}

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        SKIP_TYPE_CHECK: true

    - name: Start application
      run: npm start &
      env:
        PORT: 3000
        NODE_ENV: production

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 1; done' || (
          echo "Application failed to start"
          curl -v http://localhost:3000/ || true
          exit 1
        )

    - name: Run Navigation E2E tests
      run: |
        npx playwright test tests/e2e/specs/navigation-comprehensive.spec.js \
          --project=${{ matrix.project }} \
          --reporter=html \
          --reporter=json:test-results/navigation-results-${{ matrix.project }}.json
      env:
        BASE_URL: http://localhost:3000
        VIEWPORT_SIZE: ${{ matrix.viewport }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: navigation-test-results-${{ matrix.project }}
        path: |
          test-results/
          test-artifacts/
          playwright-report/
        retention-days: 7

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4  
      if: failure()
      with:
        name: navigation-screenshots-${{ matrix.project }}
        path: test-artifacts/screenshots/
        retention-days: 3

  mobile-navigation-tests:
    name: Mobile Navigation Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        device: 
          - 'iPhone 12'
          - 'Pixel 5'
          - 'iPad'
    
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        SKIP_TYPE_CHECK: true

    - name: Start application
      run: npm start &
      env:
        PORT: 3000
        NODE_ENV: production

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 1; done' || (
          echo "Application failed to start"
          curl -v http://localhost:3000/ || true
          exit 1
        )

    - name: Run Mobile Navigation tests
      run: |
        npx playwright test tests/e2e/specs/navigation-comprehensive.spec.js \
          --project='Mobile Chrome' \
          --grep="mobile|Mobile" \
          --reporter=html \
          --reporter=json:test-results/mobile-nav-results-${{ strategy.job-index }}.json
      env:
        BASE_URL: http://localhost:3000
        DEVICE: ${{ matrix.device }}

    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-navigation-results-${{ strategy.job-index }}
        path: |
          test-results/
          test-artifacts/
          playwright-report/
        retention-days: 7

  accessibility-tests:
    name: Navigation Accessibility Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright and axe-core
      run: |
        npx playwright install --with-deps chromium
        npm install --save-dev @axe-core/playwright

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        SKIP_TYPE_CHECK: true

    - name: Start application
      run: npm start &
      env:
        PORT: 3000
        NODE_ENV: production

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 1; done'

    - name: Run Navigation Accessibility tests
      run: |
        npx playwright test tests/e2e/specs/navigation-comprehensive.spec.js \
          --grep="Accessibility|accessibility" \
          --project=chromium \
          --reporter=html
      env:
        BASE_URL: http://localhost:3000

    - name: Upload accessibility results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: navigation-accessibility-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  performance-tests:
    name: Navigation Performance Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        SKIP_TYPE_CHECK: true

    - name: Start application
      run: npm start &
      env:
        PORT: 3000
        NODE_ENV: production

    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 1; done'

    - name: Run Navigation Performance tests
      run: |
        npx playwright test tests/e2e/specs/navigation-comprehensive.spec.js \
          --grep="Performance|performance" \
          --project=chromium \
          --reporter=html
      env:
        BASE_URL: http://localhost:3000

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: navigation-performance-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  navigation-summary:
    name: Navigation Test Summary
    runs-on: ubuntu-latest
    needs: [navigation-tests, mobile-navigation-tests, accessibility-tests, performance-tests]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        pattern: "*navigation*"
        merge-multiple: true

    - name: Generate Navigation Test Summary
      run: |
        echo "# 🧪 Navigation Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count test results
        DESKTOP_TESTS=$(find . -name "*navigation-results-*.json" -type f | wc -l)
        MOBILE_TESTS=$(find . -name "*mobile-nav-results-*.json" -type f | wc -l) 
        
        echo "## Test Execution" >> $GITHUB_STEP_SUMMARY
        echo "- 🖥️ Desktop Navigation Tests: $DESKTOP_TESTS browsers" >> $GITHUB_STEP_SUMMARY
        echo "- 📱 Mobile Navigation Tests: $MOBILE_TESTS devices" >> $GITHUB_STEP_SUMMARY
        echo "- ♿ Accessibility Tests: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- ⚡ Performance Tests: Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for failures
        if find . -name "*navigation*" -type d | grep -q .; then
          echo "## 📊 Results Available" >> $GITHUB_STEP_SUMMARY
          echo "Test artifacts and reports have been uploaded for review." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔍 Critical Navigation Areas Tested:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Desktop/Mobile Navigation Switching" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ CSS-in-JS Media Query Fixes" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Mobile Menu Functionality" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ No-JavaScript Fallbacks" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Responsive Breakpoint Testing" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Keyboard Navigation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Touch Target Sizing" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Performance Benchmarks" >> $GITHUB_STEP_SUMMARY